<?php
	/*Connects to the database*/
	require_once 'connectionDB.php';
	
	class Compose {

		/**
		*Name of the material used by art
		* @var string
		*/
		private $nameMaterial;

		/**
		* Id of the art
		* @var integer
		*/
		private $idArt;

		/**
		* Connexion on the database 
		* @var string
		*/
		private $db;

		/**
		* Constructor
		* @param string $nameMaterial
		* @param integer $idArt
		*/
		public function __construct ($nameMaterial, $idArt)
		{
			$this->db = connection();
			$this->nameMaterial = $nameMaterial;
			$this->idArt = $idArt;
		}

		/**
		* Save in the database
		* @return If it is save
		*/
		public function save () {
			$insert = $this->db->prepare("INSERT INTO COMPOSE(nameMaterial, idArt) 
				VALUES (?, ?)");
			return $insert->execute(array($this->nameMaterial, $this->idArt));
		}

		/**
		* Test if the material compose an art in the database by the name of the material an the id of the art
		* @return integer 0 or 1
		*/
		function exist() {
			$exist = $this->db->prepare("SELECT 1 FROM COMPOSE WHERE nameMaterial = ? AND idArt = ?");
			$exist->execute(array($this->nameMaterial, $this->idArt));
			return count($exist->fetchAll()) >= 1;
		}

		/**
		* Delete by the name of the material and the id of the art
		* @return If the deletion worked
		*/
		function delete() {
			$delete = $this->db->prepare("DELETE FROM COMPOSE WHERE nameMaterial = ? AND idArt = ?");
			return $delete->execute(array($this->nameMaterial, $this->idArt));
		}
	
	    /**
	     * Gets the Name of the material used by art.
	     *
	     * @return nameMaterial
	     */
	    public function getNameMaterial()
	    {
	        return $this->nameMaterial;
	    }

	    /**
	     * Sets the Name of the material used by art.
	     *
	     * @param string $newNameMaterial the name material
	     */
	    private function setNameMaterial($newNameMaterial)
	    {
	        $this->nameMaterial = $newNameMaterial;
	    }

	    /**
	     * Gets the Name of the art.
	     *
	     * @return idArt
	     */
	    public function getIdArt()
	    {
	        return $this->idArt;
	    }

	    /**
	     * Sets the Name of the art.
	     *
	     * @param integer $newidArt the name art
	     */
	    private function setIdArt($newidArt)
	    {
	        $this->idArt = $newidArt;
	    }
	}
