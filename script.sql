SET serveroutput on;
DROP TABLE ART;
DROP TABLE PHOTOGRAPHY;
DROP TABLE HISTORIC;
DROP TABLE AUTHOR;
DROP TABLE TYPE;
DROP TABLE MATERIAL;
DROP TABLE BE;
DROP TABLE DESIGN;
DROP TABLE COMPOSE;
DROP TABLE ARCHITECT;
DROP TABLE PARTICIPATE;
DROP TABLE VIDEO;
DROP TABLE REPORT;
DROP TABLE LOCATION;
DROP TABLE LOCATED;

CREATE TABLE TYPE (
  name VARCHAR(32),
  CONSTRAINT PK_TYPE PRIMARY KEY (name)
);

CREATE TABLE ART (
  	id INTEGER,
	name VARCHAR(150),
	creationYear INTEGER,
	presentationHTMLFile VARCHAR(32),
	historiqueHTMLFile VARCHAR(32),
	soundFile VARCHAR(32),
	isPublic INTEGER,
	type VARCHAR(32),
	imageFile VARCHAR(32),
	CONSTRAINT PK_Art PRIMARY KEY (id),
	CONSTRAINT FK_Art_Type FOREIGN KEY (type) 
		REFERENCES TYPE(name) ON DELETE CASCADE,
  	CONSTRAINT uc_art_name UNIQUE (name)
);

CREATE SEQUENCE seq_auto_increment_art START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER trg_auto_increment_art
  BEFORE INSERT ON art
  FOR EACH ROW
BEGIN
  :NEW.id := seq_auto_increment_art.nextval;
END;
/

CREATE TABLE LOCATION (
	name VARCHAR(150),
	longitude VARCHAR(32),
	latitude VARCHAR(32),
	CONSTRAINT PK_Location PRIMARY KEY (name)
);

CREATE TABLE LOCATED (
  nameLocation VARCHAR(150),
  idArt INTEGER,
  CONSTRAINT FK_Located_Art FOREIGN KEY (idArt) 
		REFERENCES ART(id) ON DELETE CASCADE,
  CONSTRAINT FK_Located_Location FOREIGN KEY (nameLocation) 
		REFERENCES LOCATION(name) ON DELETE CASCADE,
  CONSTRAINT PK_Located PRIMARY KEY (nameLocation, idArt)
);

CREATE TABLE VIDEO (
	titleFile VARCHAR(32),
	idArt INTEGER,
	CONSTRAINT PK_Video PRIMARY KEY (titleFile),
	CONSTRAINT FK_Video_Art FOREIGN KEY (idArt) 
		REFERENCES ART(id) ON DELETE CASCADE
);

CREATE TABLE REPORT (
	titleFileVideo VARCHAR(32),
	idArt INTEGER,
	CONSTRAINT PK_Report PRIMARY KEY (titleFileVideo, idArt),
	CONSTRAINT FK_Report_Art FOREIGN KEY (idArt) 
		REFERENCES ART(id) ON DELETE CASCADE,
	CONSTRAINT FK_Report_Video FOREIGN KEY (titleFileVideo) 
		REFERENCES VIDEO(titleFile) ON DELETE CASCADE
);

CREATE TABLE ARCHITECT (
	fullName VARCHAR(100),
	CONSTRAINT PK_Architect PRIMARY KEY (fullname)
);

CREATE TABLE PARTICIPATE (
	fullName VARCHAR(100),
	idArt INTEGER,
	CONSTRAINT PK_Participate PRIMARY KEY (fullName, idArt),
	CONSTRAINT FK_Participate_Art FOREIGN KEY (idArt) 
		REFERENCES ART(id) ON DELETE CASCADE,
	CONSTRAINT FK_Participate_Video FOREIGN KEY (fullName) 
		REFERENCES ARCHITECT(fullName) ON DELETE CASCADE
);

CREATE TABLE PHOTOGRAPHY (
  nameFile VARCHAR(32),
  idArt INTEGER,
  CONSTRAINT PK_Photography PRIMARY KEY (nameFile),
  CONSTRAINT FK_Photographie_Art FOREIGN KEY (idArt) 
		REFERENCES ART(id) ON DELETE CASCADE
);

CREATE TABLE HISTORIC (
  nameFile VARCHAR(32),
  idArt INTEGER,
  CONSTRAINT PK_Historic PRIMARY KEY (nameFile),
  CONSTRAINT FK_Historic_Art FOREIGN KEY (idArt) 
		REFERENCES ART(id) ON DELETE CASCADE
);

CREATE TABLE AUTHOR (
  fullName VARCHAR(100),
  yearBirth INTEGER,
  yearDeath INTEGER,
  CONSTRAINT PK_Author PRIMARY KEY (fullName)
);

CREATE TABLE DESIGN (
  nameAuthor VARCHAR(100),
  idArt INTEGER,
  biographyHTMLFile VARCHAR(32),
  CONSTRAINT PK_Design PRIMARY KEY (nameAuthor, idArt),
	CONSTRAINT FK_Design_Art FOREIGN KEY (idArt) 
		REFERENCES ART(id) ON DELETE CASCADE,
	CONSTRAINT FK_Design_Author FOREIGN KEY (nameAuthor) 
		REFERENCES AUTHOR(fullName) ON DELETE CASCADE
); 

CREATE TABLE MATERIAL (
  name VARCHAR(32),
  CONSTRAINT PK_Material PRIMARY KEY (name)
);

CREATE TABLE COMPOSE (
  nameMaterial VARCHAR(32),
  idArt INTEGER,
  CONSTRAINT PK_Compose PRIMARY KEY (idArt, nameMaterial),
	CONSTRAINT FK_Compose_Art FOREIGN KEY (idArt) 
		REFERENCES ART(id) ON DELETE CASCADE,
	CONSTRAINT FK_Compose_Material FOREIGN KEY (nameMaterial) 
		REFERENCES MATERIAL(name) ON DELETE CASCADE
);

INSERT INTO TYPE VALUES('Architecture');
INSERT INTO AUTHOR VALUES('Jean Pierre', 2000, 2010);
INSERT INTO AUTHOR VALUES('Jean Mousse', 2000, null);
INSERT INTO AUTHOR VALUES('Pol Bury', 1974, null);
commit;